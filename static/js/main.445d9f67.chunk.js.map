{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RecipeCard","_ref","i","recipe","index","recipeNumber","_jsx","className","style","animation","concat","children","_jsxs","Card","Header","Img","src","Body","Text","dangerouslySetInnerHTML","__html","href","target","rel","Button","variant","BiFoodMenu","RecipeResults","_ref2","recipeData","recipeCards","forEach","push","RecipeSearch","_useState","useState","_useState2","_slicedToArray","searchInput","setSearchInput","_useState3","_useState4","setRecipeData","_useState5","_useState6","setRecipeNumber","_useState7","_useState8","recipeNumRes","setRecipeNumRes","_useState9","_useState10","savedSearch","setSavedSearch","_useState11","_useState12","moreResCount","setMoreResCount","_useState13","_useState14","showMoreRes","setShowMoreRes","_useState15","_useState16","apiLimitReached","setApiLimitReached","_useState17","NaN","_useState18","minCalories","setMinCalories","_useState19","_useState20","maxCalories","setMaxCalories","_useState21","_useState22","minCarbs","setMinCarbs","_useState23","_useState24","maxCarbs","setMaxCarbs","_useState25","_useState26","minProtein","setMinProtein","_useState27","_useState28","maxProtein","setMaxProtein","_useState29","_useState30","minFat","setMinFat","_useState31","_useState32","maxFat","setMaxFat","_useState33","_useState34","savedOptionsStr","setSavedOptionsStr","addRecipeInformation","searchRecipes","options","isNaN","fetch","process","then","response","json","data","length","catch","error","console","log","showMore","onClick","offset","number","newData","BiChevronDown","_Fragment","InputGroup","Form","Control","placeholder","onChange","e","value","onKeyUp","key","code","searchKeyPress","BiRestaurant","Accordion","Item","eventKey","Group","Label","type","parseFloat","Alert","show","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.445d9f67.chunk.js","sourcesContent":["import './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { useState } from 'react';\nimport { Accordion, Alert, Form, InputGroup } from 'react-bootstrap';\nimport { BiChevronDown, BiRestaurant, BiFoodMenu } from \"react-icons/bi\";\n\nfunction RecipeCard({ recipe, index, recipeNumber }) {\n  const animDuration = 500;\n  const animDelay = 100;\n\n  const animString = (i) => {\n    if(i >= recipeNumber){\n      i = i % recipeNumber;\n    }\n    return `fadeIn ${animDuration}ms ease-out ${animDelay * (i + 1)}ms forwards`;\n  }\n\n  return (\n      <div className='recipe-result' style={{ animation: animString(index) }}>\n        <Card className='recipe-card'>\n          <Card.Header>{recipe['title']}</Card.Header>\n          <Card.Img src={recipe['image']}></Card.Img>\n          <Card.Body>\n            <Card.Text dangerouslySetInnerHTML={{ __html: recipe['summary'] }}>\n            </Card.Text>\n            <a href={recipe['sourceUrl']} target='_blank' rel='noreferrer'>\n              <Button variant='primary'>Recipe <BiFoodMenu/></Button>\n            </a>\n          </Card.Body>\n        </Card>\n      </div>\n  );\n}\n\nfunction RecipeResults({ recipeData, recipeNumber }) {\n  const recipeCards = [];\n\n  recipeData.forEach((recipe, i) => {\n    recipeCards.push(\n      <RecipeCard recipe={recipe} index={i} recipeNumber={recipeNumber} key={recipe['title']}/>\n    );\n  })\n\n  return (\n    <div className='recipe-results-container'>\n      <div className='recipe-results'>\n        {recipeCards}\n      </div>\n    </div>\n  )\n}\n\nfunction RecipeSearch() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [recipeData, setRecipeData] = useState([]);\n  const [recipeNumber, setRecipeNumber] = useState(25);\n  const [recipeNumRes, setRecipeNumRes] = useState(0);\n  const [savedSearch, setSavedSearch] = useState(0);\n  const [moreResCount, setMoreResCount] = useState(0);\n  const [showMoreRes, setShowMoreRes] = useState(false);\n  const [apiLimitReached, setApiLimitReached] = useState(false);\n\n  const [minCalories, setMinCalories] = useState(NaN);\n  const [maxCalories, setMaxCalories] = useState(NaN);\n  const [minCarbs, setMinCarbs] = useState(NaN);\n  const [maxCarbs, setMaxCarbs] = useState(NaN);\n  const [minProtein, setMinProtein] = useState(NaN);\n  const [maxProtein, setMaxProtein] = useState(NaN);\n  const [minFat, setMinFat] = useState(NaN);\n  const [maxFat, setMaxFat] = useState(NaN);\n  const [savedOptionsStr, setSavedOptionsStr] = useState(\"\");\n\n  const addRecipeInformation = true;\n\n  function searchRecipes(){\n    setRecipeData([]);\n    setShowMoreRes(false);\n\n    let options = \"\";\n    if(!isNaN(minCalories)) options += '&minCalories=' + minCalories;\n    if(!isNaN(maxCalories)) options += '&maxCalories=' + maxCalories;\n    if(!isNaN(minCarbs)) options += '&minCarbs=' + minCarbs;\n    if(!isNaN(maxCarbs)) options += '&maxCarbs=' + maxCarbs;\n    if(!isNaN(minProtein)) options += '&minProtein=' + minProtein;\n    if(!isNaN(maxProtein)) options += '&maxProtein=' + maxProtein;\n    if(!isNaN(minFat)) options += '&minFat=' + minFat;\n    if(!isNaN(maxFat)) options += '&maxFat=' + maxFat; \n\n    setSavedOptionsStr(options);\n\n    fetch(\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_SPOONACULAR_KEY}&query=${searchInput}&addRecipeInformation=${addRecipeInformation}&number=${recipeNumber}${options}`\n    )\n    .then(response => response.json())\n    .then(data => {\n      if(data['code'] !== 402){\n        setRecipeData(data['results']);\n        setRecipeNumber(data['number']);\n        setRecipeNumRes(data['totalResults']);\n        setSavedSearch(searchInput);\n        setApiLimitReached(false);\n\n        if(data['results'].length < data['totalResults']){\n          setShowMoreRes(true);\n        }\n      }\n      else{\n        setApiLimitReached(true);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      console.log(\"error getting recipe data\")\n    });\n  }\n\n  function moreResults(){\n    let offset = recipeNumber * (moreResCount + 1); \n    let number = recipeNumber;\n    if(recipeNumRes - recipeData.length < recipeNumber){\n      number = recipeNumRes - recipeData.length;\n    }\n    fetch(\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_SPOONACULAR_KEY}&query=${savedSearch}&addRecipeInformation=${addRecipeInformation}&number=${number}&offset=${offset}${savedOptionsStr}`\n    )\n    .then(response => response.json())\n    .then(data => {\n      if(data['code'] !== 402){\n        let newData = recipeData.concat(data['results']); \n        setRecipeData(newData);\n        setSavedSearch(searchInput);\n        setApiLimitReached(false);\n        setMoreResCount(moreResCount + 1);\n\n        if(newData.length < recipeNumRes){\n          setShowMoreRes(true);\n        }\n        else{\n          setShowMoreRes(false);\n        }\n      }\n      else{\n        setApiLimitReached(true);\n      }\n    })\n    .catch((error) => {\n      console.log(error);\n      console.log(\"error getting recipe data\")\n    });\n  }\n\n  function searchKeyPress(key){\n    if(key.code === \"Enter\"){\n      searchRecipes();\n    }\n  }\n\n  let showMore = null;\n  if(showMoreRes){\n    showMore = <div className='more-results'>\n                  <Button className='more-results-button' variant='light' onClick={moreResults}>More results <BiChevronDown/></Button>\n                </div>\n  }\n\n  const onSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  }\n\n  const onMinCalories = (e) => {\n    setMinCalories(parseFloat(e.target.value));\n  }\n\n  const onMaxCalories = (e) => {\n    setMaxCalories(parseFloat(e.target.value));\n  }\n\n  const onMinCarbs = (e) => {\n    setMinCarbs(parseFloat(e.target.value));\n  }\n\n  const onMaxCarbs = (e) => {\n    setMaxCarbs(parseFloat(e.target.value));\n  }\n\n  const onMinProtein = (e) => {\n    setMinProtein(parseFloat(e.target.value));\n  }\n\n  const onMaxProtein = (e) => {\n    setMaxProtein(parseFloat(e.target.value));\n  }\n\n  const onMinFat = (e) => {\n    setMinFat(parseFloat(e.target.value));\n  }\n\n  const onMaxFat = (e) => {\n    setMaxFat(parseFloat(e.target.value));\n  }\n\n  return (\n      <>\n        <div className='search-bar-container'>\n          <h1 className='app-title'>Recipe Search</h1>\n          <div className='search-bar'>\n            <InputGroup className='search'>\n              <Form.Control placeholder='Recipe Search' aria-label='Recipe Search' onChange={onSearchChange} onKeyUp={(key) => searchKeyPress(key)}/>\n              <Button variant='outline-primary' onClick={searchRecipes}><BiRestaurant/> Search</Button>\n            </InputGroup>\n          </div>\n\n          <div className='options'>\n            <Accordion className='options-accordion'>\n              <Accordion.Item eventKey='0'>\n                <Accordion.Header>Options</Accordion.Header>\n                <Accordion.Body>\n                  <Form>\n                    <Form.Group>\n                      <Form.Label>Minimum Calories</Form.Label>\n                      <Form.Control type='number' onChange={onMinCalories}/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Calories</Form.Label>\n                      <Form.Control type='number' onChange={onMaxCalories}/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Minimum Carbs</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMinCarbs}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Carbs</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMaxCarbs}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Minimum Protein</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMinProtein}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Protein</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMaxProtein}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Minimum Fat</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMinFat}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Fat</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMaxFat}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                  </Form>\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n\n          <div className='api-alert'>\n            <Alert variant='primary' show={apiLimitReached}>The Recipe API has exceeded it's maximum number of requests today. Sorry!</Alert>\n          </div>\n        </div>\n\n        <RecipeResults recipeData={recipeData} recipeNumber={recipeNumber}/>\n\n        {showMore}\n      </>\n  )\n}\n\nfunction App() {\n  return (\n    <RecipeSearch/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//bootstrap import\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}