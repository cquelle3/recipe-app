{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["RecipeCard","_ref","i","recipe","index","recipeNumber","_jsx","className","style","animation","concat","children","_jsxs","Card","Header","Img","src","Body","Text","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","href","target","rel","Button","variant","BiFoodMenu","RecipeResults","_ref2","recipeData","recipeCards","forEach","push","RecipeSearch","_useState","useState","_useState2","_slicedToArray","searchInput","setSearchInput","_useState3","_useState4","setRecipeData","_useState5","_useState6","setRecipeNumber","_useState7","_useState8","recipeNumRes","setRecipeNumRes","_useState9","_useState10","savedSearch","setSavedSearch","_useState11","_useState12","moreResCount","setMoreResCount","_useState13","_useState14","showMoreRes","setShowMoreRes","_useState15","_useState16","apiLimitReached","setApiLimitReached","_useState17","NaN","_useState18","minCalories","setMinCalories","_useState19","_useState20","maxCalories","setMaxCalories","_useState21","_useState22","minCarbs","setMinCarbs","_useState23","_useState24","maxCarbs","setMaxCarbs","_useState25","_useState26","minProtein","setMinProtein","_useState27","_useState28","maxProtein","setMaxProtein","_useState29","_useState30","minFat","setMinFat","_useState31","_useState32","maxFat","setMaxFat","_useState33","_useState34","savedOptionsStr","setSavedOptionsStr","_useState35","_useState36","loading","setLoading","addRecipeInformation","searchRecipes","options","isNaN","fetch","process","then","response","json","data","length","catch","error","console","log","showMore","onClick","offset","number","newData","BiChevronDown","loadIcon","Spinner","useEffect","header","document","getElementById","intercept","IntersectionObserver","_ref3","entry","classList","toggle","isIntersecting","observe","_Fragment","id","InputGroup","Form","Control","placeholder","onChange","e","value","onKeyUp","key","code","searchKeyPress","BiRestaurant","Accordion","Item","eventKey","Group","Label","type","parseFloat","Alert","show","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"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","file":"static/js/main.312096d6.chunk.js","sourcesContent":["import './App.css';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { useEffect, useState } from 'react';\nimport { Accordion, Alert, Form, InputGroup, Spinner } from 'react-bootstrap';\nimport { BiChevronDown, BiRestaurant, BiFoodMenu } from \"react-icons/bi\";\nimport DOMPurify from 'dompurify';\n\nfunction RecipeCard({ recipe, index, recipeNumber }) {\n  const animDuration = 500;\n  const animDelay = 100;\n\n  const animString = (i) => {\n    if(i >= recipeNumber){\n      i = i % recipeNumber;\n    }\n    return `fadeIn ${animDuration}ms ease-out ${animDelay * (i + 1)}ms forwards`;\n  }\n\n  return (\n      <div className='recipe-result' style={{ animation: animString(index) }}>\n        <Card className='recipe-card'>\n          <Card.Header>{recipe['title']}</Card.Header>\n          <Card.Img src={recipe['image']}></Card.Img>\n          <Card.Body>\n            <Card.Text dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(recipe['summary']) }}>\n            </Card.Text>\n            <a href={recipe['sourceUrl']} target='_blank' rel='noreferrer'>\n              <Button variant='primary'>Recipe <BiFoodMenu/></Button>\n            </a>\n          </Card.Body>\n        </Card>\n      </div>\n  );\n}\n\nfunction RecipeResults({ recipeData, recipeNumber }) {\n  const recipeCards = [];\n\n  recipeData.forEach((recipe, i) => {\n    recipeCards.push(\n      <RecipeCard recipe={recipe} index={i} recipeNumber={recipeNumber} key={recipe['title']}/>\n    );\n  })\n\n  return (\n    <div className='recipe-results-container'>\n      <div className='recipe-results'>\n        {recipeCards}\n      </div>\n    </div>\n  )\n}\n\nfunction RecipeSearch() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [recipeData, setRecipeData] = useState([]);\n  const [recipeNumber, setRecipeNumber] = useState(25);\n  const [recipeNumRes, setRecipeNumRes] = useState(0);\n  const [savedSearch, setSavedSearch] = useState(0);\n  const [moreResCount, setMoreResCount] = useState(0);\n  const [showMoreRes, setShowMoreRes] = useState(false);\n  const [apiLimitReached, setApiLimitReached] = useState(false);\n\n  const [minCalories, setMinCalories] = useState(NaN);\n  const [maxCalories, setMaxCalories] = useState(NaN);\n  const [minCarbs, setMinCarbs] = useState(NaN);\n  const [maxCarbs, setMaxCarbs] = useState(NaN);\n  const [minProtein, setMinProtein] = useState(NaN);\n  const [maxProtein, setMaxProtein] = useState(NaN);\n  const [minFat, setMinFat] = useState(NaN);\n  const [maxFat, setMaxFat] = useState(NaN);\n  const [savedOptionsStr, setSavedOptionsStr] = useState(\"\");\n\n  const [loading, setLoading] = useState(false);\n\n  const addRecipeInformation = true;\n\n  function searchRecipes(){\n    setLoading(true);\n    setMoreResCount(0);\n    setRecipeData([]);\n    setShowMoreRes(false);\n\n    let options = \"\";\n    if(!isNaN(minCalories)) options += '&minCalories=' + minCalories;\n    if(!isNaN(maxCalories)) options += '&maxCalories=' + maxCalories;\n    if(!isNaN(minCarbs)) options += '&minCarbs=' + minCarbs;\n    if(!isNaN(maxCarbs)) options += '&maxCarbs=' + maxCarbs;\n    if(!isNaN(minProtein)) options += '&minProtein=' + minProtein;\n    if(!isNaN(maxProtein)) options += '&maxProtein=' + maxProtein;\n    if(!isNaN(minFat)) options += '&minFat=' + minFat;\n    if(!isNaN(maxFat)) options += '&maxFat=' + maxFat; \n\n    setSavedOptionsStr(options);\n\n    fetch(\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_SPOONACULAR_KEY}&query=${searchInput}&addRecipeInformation=${addRecipeInformation}&number=${recipeNumber}${options}`\n    )\n    .then(response => response.json())\n    .then(data => {\n      if(data['code'] !== 402){\n        setRecipeData(data['results']);\n        setRecipeNumber(data['number']);\n        setRecipeNumRes(data['totalResults']);\n        setSavedSearch(searchInput);\n        setApiLimitReached(false);\n\n        if(data['results'].length < data['totalResults']){\n          setShowMoreRes(true);\n        }\n      }\n      else{\n        setApiLimitReached(true);\n      }\n      setLoading(false);\n    })\n    .catch((error) => {\n      console.log(error);\n      console.log(\"error getting recipe data\")\n      setLoading(false);\n    });\n  }\n\n  function moreResults(){\n    setLoading(true);\n\n    let offset = recipeNumber * (moreResCount + 1); \n    let number = recipeNumber;\n    if(recipeNumRes - recipeData.length < recipeNumber){\n      number = recipeNumRes - recipeData.length;\n    }\n\n    fetch(\n      `https://api.spoonacular.com/recipes/complexSearch?apiKey=${process.env.REACT_APP_SPOONACULAR_KEY}&query=${savedSearch}&addRecipeInformation=${addRecipeInformation}&number=${number}&offset=${offset}${savedOptionsStr}`\n    )\n    .then(response => response.json())\n    .then(data => {\n      if(data['code'] !== 402){\n        let newData = recipeData.concat(data['results']); \n        setRecipeData(newData);\n        setSavedSearch(searchInput);\n        setApiLimitReached(false);\n        setMoreResCount(moreResCount + 1);\n\n        if(newData.length < recipeNumRes){\n          setShowMoreRes(true);\n        }\n        else{\n          setShowMoreRes(false);\n        }\n      }\n      else{\n        setApiLimitReached(true);\n      }\n      setLoading(false);\n    })\n    .catch((error) => {\n      console.log(error);\n      console.log(\"error getting recipe data\")\n      setLoading(false);\n    });\n  }\n\n  function searchKeyPress(key){\n    if(key.code === \"Enter\"){\n      searchRecipes();\n    }\n  }\n\n  let showMore = null;\n  if(showMoreRes && !loading){\n    showMore = <div className='more-results'>\n                  <p>{recipeData.length} of {recipeNumRes}</p>\n                  <Button className='more-results-button' variant='light' onClick={moreResults}>More results <BiChevronDown/></Button>\n                </div>\n  }\n  else if(!showMoreRes && recipeData.length > 0){\n    showMore = <div className='more-results'>\n                  <p>{recipeData.length} of {recipeNumRes}</p>\n               </div>\n  }\n\n  let loadIcon = null;\n  if(loading){\n    loadIcon = <div className='load-spinner'>\n                  <Spinner animation=\"border\" variant=\"primary\" />\n                </div>\n  }\n\n  const onSearchChange = (e) => {\n    setSearchInput(e.target.value);\n  }\n\n  const onMinCalories = (e) => {\n    setMinCalories(parseFloat(e.target.value));\n  }\n\n  const onMaxCalories = (e) => {\n    setMaxCalories(parseFloat(e.target.value));\n  }\n\n  const onMinCarbs = (e) => {\n    setMinCarbs(parseFloat(e.target.value));\n  }\n\n  const onMaxCarbs = (e) => {\n    setMaxCarbs(parseFloat(e.target.value));\n  }\n\n  const onMinProtein = (e) => {\n    setMinProtein(parseFloat(e.target.value));\n  }\n\n  const onMaxProtein = (e) => {\n    setMaxProtein(parseFloat(e.target.value));\n  }\n\n  const onMinFat = (e) => {\n    setMinFat(parseFloat(e.target.value));\n  }\n\n  const onMaxFat = (e) => {\n    setMaxFat(parseFloat(e.target.value));\n  }\n\n  //used to check if we scroll past the title\n  //triggers box shadow for header is css\n  useEffect(() => {\n    const header = document.getElementById('header');\n    const intercept = document.getElementById('title');\n    const observer = new IntersectionObserver(([entry]) => {\n      header.classList.toggle('active', !entry.isIntersecting);\n    });\n    observer.observe(intercept);\n  });\n\n  return (\n      <>\n        <div className='title-container' id='title'>\n          <h1 className='app-title'>Recipe Search</h1>\n        </div>\n        <div className='search-bar-container' id='header'>\n          <div className='search-bar'>\n            <InputGroup className='search'>\n              <Form.Control placeholder='Recipe Search' aria-label='Recipe Search' onChange={onSearchChange} onKeyUp={(key) => searchKeyPress(key)}/>\n              <Button variant='outline-primary' onClick={searchRecipes}><BiRestaurant/> Search</Button>\n            </InputGroup>\n          </div>\n\n          <div className='options'>\n            <Accordion className='options-accordion'>\n              <Accordion.Item eventKey='0'>\n                <Accordion.Header>Options</Accordion.Header>\n                <Accordion.Body>\n                  <Form>\n                    <Form.Group>\n                      <Form.Label>Minimum Calories</Form.Label>\n                      <Form.Control type='number' onChange={onMinCalories}/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Calories</Form.Label>\n                      <Form.Control type='number' onChange={onMaxCalories}/>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Minimum Carbs</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMinCarbs}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Carbs</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMaxCarbs}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Minimum Protein</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMinProtein}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Protein</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMaxProtein}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Minimum Fat</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMinFat}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                    <Form.Group>\n                      <Form.Label>Maximum Fat</Form.Label>\n                      <InputGroup>\n                        <Form.Control type='number' onChange={onMaxFat}/>\n                        <InputGroup.Text>grams</InputGroup.Text>\n                      </InputGroup>\n                    </Form.Group>\n                  </Form>\n                </Accordion.Body>\n              </Accordion.Item>\n            </Accordion>\n          </div>\n\n          <div className='api-alert'>\n            <Alert variant='primary' show={apiLimitReached}>The Recipe API has exceeded it's maximum number of requests today. Sorry!</Alert>\n          </div>\n        </div>\n\n        <RecipeResults recipeData={recipeData} recipeNumber={recipeNumber}/>\n\n        {loadIcon}        \n        {showMore}\n      </>\n  )\n}\n\nfunction App() {\n  return (\n    <RecipeSearch/>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//bootstrap import\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}